    
    	<p>Треба да се развие класа <strong>Queuе</strong> која претставува податочна структура ред, a во позадина e имплементирана како поврзана листа. Прво треба да се напише класа за еден елемент во листата (еден јазел) <code>Node</code>. Kласаta <code>Node</code> треба да има еден генерички параметар <code>Т</code> кој се однесува на елементот во јазелот и една референца кон следниот јазел во листата. Поформално класата <code>Node</code> треба да ги нуди следниве  методи:</p>

<ul>
<li><code>Node(T element, Node<T> next)</code> - конструктор кој ги иницијализира двете променливи</li>
<li><code>getElement():T</code></li>
<li><code>getNext():Node<T></code></li>
<li><code>setNext(Node<T> next)</code></li>
</ul>

<p>Користејќи ја класата <code>Node</code> ја пишуваме класата <code>Queue</code> со следниве методи:</p>

<ul>
<li><code>Queue()</code> – креира нов празен ред</li>
<li><code>isEmpty():boolean</code> - враќа true, ако редот е празен (не содржи ниеден елемент)</li>
<li><code>enqueue(T element)</code> - го додава елементот на крајот на редот</li>
<li><code>dequeue():T</code> - го отстранува елементот на почеток од редот и истиот го враќа, доколку редот е празен фрла исклучок <code>EmptyQueueException</code></li>
<li><code>peek():T</code> - го враќа елементот на почетокот од редот (не ја менува листата), доколку редот е празен фрла исклучок <code>EmptyQueueException</code></li>
<li><code>inspect():T</code> - го враќа елементот на крајот на редот (не ја менува листата), доколку редот е празен фрла исклучок <code>EmptyQueueException</code></li>
<li><code>count():int</code> - го враќа бројот на елементи во редот</li>
</ul>

<p><strong>Забелешка</strong>: Класата <code>Queue</code> има еден генерички параметар кој се однесува на типот не елементи кои се чуваат во редот.</p>

<p>**Важно: Не смее да се користат готови податочни структури како <code>ArrayList</code> или <code>LinkedList</code>, за да се имплементира класата <code>Queue</code>**.</p>
    